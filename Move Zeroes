Given an integer array nums, move all O's to the end of it while maintaining the relative order of the non-zero elements.
Note that you must do this in- place without making a copy of the array. 


The problem you're describing is known as "Move Zeroes" and it's a common interview question in coding interviews.

Here's the explanation:

Problem:
Given an integer array nums, you need to move all occurrences of the integer 0 to the end of the array while
maintaining the relative order of the non-zero elements. You must do this in-place without making a copy of 
the array.

Example:
Input: nums = [0, 1, 0, 3, 12]
Output: [1, 3, 12, 0, 0]

Explanation:

All 0s are moved to the end of the array.
The relative order of the non-zero elements [1, 3, 12] is maintained.



import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if(arr[i]==0)
                {
                    int temp=arr[i];
                    arr[i]=arr[j];
                    arr[j]=temp;
                }
            }
        }
        
        for(int i=0;i<n;i++)
        {
            System.out.print(arr[i]+" ");
        }

    }
}

